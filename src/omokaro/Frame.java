/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frame.java
 *
 * Created on Jan 4, 1980, 12:39:08 AM
 */

package omokaro;

import java.awt.event.KeyEvent;
import javax.swing.JTextPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author USER
 */
final public class Frame extends javax.swing.JFrame {

    private static Frame frame;
    String prefix = ">>>";
    boolean enterFlag = false;
    int promptPos;
    
    /** Creates new form Frame */
    private Frame() {
        
        initComponents();
        inputBox.setText(prefix);
        promptPos = 3;
        AbstractDocument doc = (AbstractDocument)inputBox.getDocument();        
        doc.setDocumentFilter(new CommandFilter());
    }

    public static Frame getInstance(){
        if(frame==null)
            frame = new Frame();
        return frame;
    }

    public JTextPane getInputBox(){
        return inputBox;
    }

    private class CommandFilter extends DocumentFilter{


            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                
                super.insertString(fb, offset, string, attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {           
                if(enterFlag){
                    String fo = "\t"+formatOutput();
                    text = text + fo + "\n" + prefix;
                    promptPos = fb.getDocument().getEndPosition().getOffset()+fo.length()+4;
                    enterFlag = false;
                    super.replace(fb, offset, length, text, attrs);
                }

                if(offset>=promptPos)
                    super.replace(fb, offset, length, text, attrs);
            }


            @Override
            public void remove(FilterBypass fb, int offset, int length) throws BadLocationException {
                if(offset>=promptPos)
                    super.remove(fb, offset, length);
            }
        }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputBox = new javax.swing.JTextPane();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GCD Finder");

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 51));

        inputBox.setBackground(new java.awt.Color(0, 0, 0));
        inputBox.setForeground(new java.awt.Color(255, 255, 255));
        inputBox.setCaretColor(new java.awt.Color(204, 204, 0));
        inputBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        inputBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputBoxKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(inputBox);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputBoxKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){            
            enterFlag = true;
        }
}//GEN-LAST:event_inputBoxKeyPressed

    public String formatOutput() throws BadLocationException{
        
        String string = inputBox.getText().substring(promptPos);
        InputHandler h = new InputHandler.IntegerHandler(new InputHandler.PolyHandler(new InputHandler.CompHandler(null)));
        h.handle(string);
        return h.getSB().toString();
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Frame frame = Frame.getInstance();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);                
                

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane inputBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
